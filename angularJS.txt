AngularJS 1.x
************************************************************

Diretivas: Extensões de atributos HTML com a extensão "ng". Que são aplicadadas em elementos do DOM dando comportamentos especificos.

Criar própria diretiva

tipo de atributos HTML que devam receber essa directivas, restrict (por padrão 'E' e 'A')
[E - elemento HTML: <nome-diretiva></nome-diretiva>,
 A - atributo html: <div nome-diretiva="exp"></div>,
 C - Classe: <div class="nome-diretiva: exp;"></div>
]

Apelido de controller -> primeiroController as user

ng-app = qual sua aplicação e elemento raiz dela.

ng-init="meuNome='Jean'" = inicia uma variável com esse valor

ng-controller="NOMe" = adiciona uma diretiva a nossas views, liga um controller a uma página, realiza toda logica associada.

$scope = elemento de ligação entre a tela e o controller

{{nome}} = procura o valor de uma variável no scope

ng-show = exibe um elemento HTML na tela caso a expressao seja verdadeira

ng-hide="iniciado" esconde caso seja verdadeira

ng-if="iniciado" remove elemento do DOM caso expressao seja verdadeira

ng-repeat="elemento in vetor" = repetição de um elemento HTML para cada elemento de uma coleção

ng-click="finalizar()" = atribui um comportamento ao elemento ao ser clicado

ng-class="{'classe1':condicao;'classe2':condicao}" = aplica uma classe CSS ao elemento caso a condicao seja atendida


ng-model="propriedade" - faz a ligação(binding) do $scope do controller com a view

Two-way-binding = atualização em tempo real das variaveis contidas no controller

ng-readonly="expressao" -> torna o campo readonly se true

ng-required="true" -> torna o campo obrigatorio caso seja true

ng-maxlength="integer" or ng-minlength="integer" -> quantidade maxima de caracteres

ng-pattern="padrao" -> valida utilizando expressoes regulares

atributo $valid = indica ao angular se o form é valido retornando um boolean

filters - são funções transformativas do angular que podem ser aplicadas em expressoes tanto na view quanto nos controllers

Filtro Currency
Na View -> {{expressao|currency:'simbolomonetario': quantidade de zeros}}
No Controller -> $filter('currency')(expressao, simbolo monetario, quantidade de zeros)

Filtro Date
Na View -> {{expressao | date:formato:timezone}}
No Controller -> $filter('date')(expressao,formato,timezone)

Filter Colecoes - extrai subséries de coleções
Na View -> {{colecao | filter:valor}}
No Controller -> $filter('filter')(colecao, valor)  

Filter OrderBy - ordena os valores por uma condicao
Na View -> {{expressao | orderBy: valor: inverter}}
No Controller -> $filter('orderBy')(expressao, campo, inverter)  


atributo "name" do form no $scope para ser acessivel no controller, o Angular cria uma variavel com o $scope "name" do form

************************************************************

Injeção de Dependencias - é um padrão de projeto que trata a forma como seus componentes obteem a dependencia, componentes dependem de outros componentes e de alguma forma devem estar disponiveis pra ele quando necessitar.

SERVICES
São elementos que tem a unica função utilizados para atender a uma necessidade especifica da aplicação, uma das pricipais utilidade é a reutilizacao em controllers. Verifica se está criado, caso contrario cria, são Singletons, possuem uma instancia unica em todo sistema.

Services padrões: $filter, $http, $resource, $window, $rootScope, $location

$filter -> capaz de aplicar funções de transformação

$http -> capaz de fazer requisicoes http para servidores backend($http.get, $http.head, $http.post, $http.put, $http.delete).

$http.get('/url').then(function(response){
 funcao executada caso a resposta seja sucesso
},function(response){
 funcao executada caso a resposta seja de erro
});

response.status; - status da resposta
response.data; - dados da resposta

Serviços REST - chamada http que tem como resposta um JSON de dados

ng-resource - utilizado para fazer a comunicação com serviços REST, proporcionando métodos de mais alto nivel que http, não vem por padrão com o angular
************************************************************

Routing - dispositivo de navegabilidade, que gerencia a navegação entre estados e identificando qual página sera exibida.
Utiliza a substituição de templates, somente partes especificas da aplicação são recarregadas
No primeiro load a maioria da aplicacao é carregada, depois apenas partes da aplicacao.
Cada página é representada por um estado sendo a pagina inicial o estado inicial, navegacao seria a mudança de um estado X para um estado Y

Estado:{nome do estado,
html da página do estado,
URL do estado}

ui-view -> diretiva que o $stateProvider usa para mostrar a view de acordo com um estado dado

app.run() -> método usado para quado a aplicacao rodar

************************************************************

ng-view -> tag representa o ponto que será substituido

$location.path('/') -> redireciona para uma rota
$routeParams são os parametros passados pela url